<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Javascript | IT Monkey Life]]></title>
  <link href="http://ITMonkeyLife.github.io/Blog/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://ITMonkeyLife.github.io/Blog/"/>
  <updated>2015-12-19T11:35:46+08:00</updated>
  <id>http://ITMonkeyLife.github.io/Blog/</id>
  <author>
    <name><![CDATA[Rick]]></name>
    <email><![CDATA[382542165@qq.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Bootstrap入门]]></title>
    <link href="http://ITMonkeyLife.github.io/Blog/blog/2015/12/18/bootstrapru-men/"/>
    <updated>2015-12-18T10:38:37+08:00</updated>
    <id>http://ITMonkeyLife.github.io/Blog/blog/2015/12/18/bootstrapru-men</id>
    <content type="html"><![CDATA[<p>
简单介绍Bootstrap，下载以及使用。
</p>
<h2>下载</h2>
<p>
  Bootstrap（当前版本v3.3.5）提供以下几种方式帮你快速上手，每一种方式针对具有不同技能等级的开发者和不同的使用场景。
</p>
<h4>使用 Bootstrap 提供的免费 CDN 加速服务（同时支持 http 和 https 协议）</h4>
<p>
  [Bootstrap](http://www.bootcss.com/) 专门构建了自己的免费 CDN 加速服务。基于国内云厂商的 CDN 服务，访问速度更快、加速效果更明显、没有速度和带宽限制、永久免费。Bootstrap 中文网还对大量的前端开源工具库提供了 CDN 加速服务，请进入[BootCDN](http://www.bootcdn.cn/) 主页查看更多可用的工具库。
  ```html
  <!-- 新 Bootstrap 核心 CSS 文件 -->
  <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css" />

  <!-- 可选的Bootstrap主题文件（一般不用引入） -->
  <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css" />

  <!-- jQuery文件。务必在bootstrap.min.js 之前引入 -->
  <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script>

  <!-- 最新的 Bootstrap 核心 JavaScript 文件 -->
  <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
  ```
</p>
<h2>安装</h2>
<h4>通过Bower安装</h4>
<p>
  可以通过[Bower](http://bower.io/)安装并管理 Bootstrap 的 Less、CSS、JavaScript 和字体文件。
  ```
  $ bower install bootstrap
  ```
</p>
<h4>通过npm安装</h4>
<p>
 还可以利用[npm](https://www.npmjs.com/)工具来安装Bootstrap
 ```
 $ npm install bootstrap
 ```
 <code>require('bootstrap')</code>代码的作用就是家在Bootstrap的所有jQuery插件。其中，<code>bootstrap</code>模块自身并不导出任何内容。你可以通过加载安装包顶级目录下的<code>/js/.js</code>文件的方式手动加载单个的Bootstrap插件。

 Bootstrap的<code>package.json</code>文件包含了一些额外的元数据：
 - <code>less</code> - Bootstrap源码的入口[less](http://lesscss.org/)文件的路径
 - <code>style</code> - Bootstrap的未压缩CSS文件的路径
 </p>
<h4>通过Composer安装</h4>
<p>
  通过[Composer](https://getcomposer.org/)也可以安装Bootstrap安装包。其中包括Less、CSS、Javascript和fonts文件:
  ```
  $ composer require twbs/bootstrap
  ```
</p>
<h4>编译Less/Sass源码需要注意的事项</h4>
<p>
  Bootstrap利用[Autoprefixer](https://github.com/postcss/autoprefixer)自动为[某些CSS属性添加针对特定厂商的前缀](http://webdesign.about.com/od/css/a/css-vendor-prefixes.htm)。如果你是从Less/Sass源码编译Bootstrap的，并且没有使用Bootstrap自带的Gruntfile文件，那你必须将Autoprefixer集成到你的编译工具和编译过程中。如果你使用的是预先编译好的Bootstrap文件，那就无需担心这个问题。
  </p>
<h2>Bootstrap包含的内容</h2>
<p>
  Bootstrap提供了两种形式的压缩包，在下载下来的压缩包内可以看到下面的目录和文件，这些文件按照类别不同放在不同的目录，并提供了压缩和未压缩两种版本。
  </p>

<h4>Bootstrap 插件全部依赖 jQuery</h4>
<p>
  请注意，Bootstrap的所有Javascript插件都依赖jQuery，因此jQuery必须在Bootstrap之前引入，在<code>bower.json</code>文件中列出了Bootstrap所支持的jQuery版本。
  </p>
<h4>预编译版本</h4>
<p>
  下载解压之后，将其解压到任意目录下，可看到以下目录结构:
![](http://ww2.sinaimg.cn/large/626e5d69gw1ez45q0hoxnj20pi0jydjt.jpg)


  上面所展示的就是Bootstrap的基本文件结构:预编译文件可以直接使用到任何web项目中。我们提供了编译好的CSS和JS（<code>bootstrap.</code>)文件，还有经过压缩的CSS和JS（<code>bootstrap.min.</code>)文件。同时还提供了CSS[源码映射表](https://developer.chrome.com/devtools/docs/css-preprocessors)(<code>bootstrap..map</code>)。可以在某些浏览器的开发工具中使用。同时还包含了来自glyphicons-halflings-regular的图标字体，在附带的Bootstrap主题中使用到了这些图标。
</p>
<h4>Bootstrap 源码</h4>
<p>
  Bootstrap源码包含了预先编译的CSS、Javascript和图标字体文件，并且还有LESS、Javascript和文档的源码。具体来说，主要文件组织结构如下：
  ![](http://ww4.sinaimg.cn/large/626e5d69gw1ez45qmj696j20o20c0js3.jpg)
  <code>less/</code>、<code>js/</code>、<code>fonts/</code>目录分别包含了CSS、JS和字体图标的源码。<code>dist/</code>目录包含了上面所说的预编译Bootstrap包内的所有文件。<code>docs/</code>包含了所有文档的源码文件，<code>examples/</code>目录是Bootstrap官方提供的实例工程。除了这些，其他文件还包含Bootstrap安装包的定义文件、许可证文件和编译脚本。
</p>
<h2>编译 CSS 和 Javascript 文件</h2>
<p>
  Bootstrap使用[Grunt](http://gruntjs.com/)作为编译系统，并且对外提供了一些方法用于编译整个框架。下面讲解的就是如何编译源码、运行和测试。
</p>
<h4>Grunt 的安装</h4>
<p>
  安装Grunt钱，你需要先下载并安装<code>node.js</code>。npm是node package modules 的简称，它的作用是基于node.js管理扩展包之间的依赖关系。

  然后在命令行输入下面的命令：
  1. 在全局环境中安装<code>grunt-cli</code>:<code>npm install -g grunt-cli</code>
  2. 进入<code>/bootstrap/</code>根目录，然后执行npm install 命令。npm 将读取<code>package.json</code>文件并自动安装次文件中列出的所有被依赖的扩展包。

  上述步骤完成后，你就可以运行Bootstrap所提供的各个Grunt命令了。
</p>
<h4>可用的 Grunt 命令</h4>
<p>
 grunt dist (仅编译CSS 和 Javascript 文件)
  重新生成<code>/dist/</code>目录，并将编译压缩后的CSS和Javascript文件放入这个目录中。作为一个Bootstrap用户，大部分你只需要执行者一个命令。
 grunt watch (检测文件的改变，并运行指定的Grunt任务)
  监测Less源码文件的改变，并自动重新将其编译为CSS文件。
 grunt test (运行测试用例)
  在[PhantomJS](http://phantomjs.org/)环境中运行[JSHint](http://jshint.com/)和[QUnit](http://qunitjs.com/)自动化测试用例。
 grunt docs (编译并测试文档中的资源文件)
  编译并测试 CSS、JavaScript 和其他资源文件。在本地环境下通过<code> jekyll serve </code>运行 Bootstrap 文档时需要用到这些资源文件。
 grunt (重新构建所有的内容并运行测试用例)
  编译并压缩 CSS 和 JavaScript 文件、构建文档站点、对文档做 HTML5 校验、重新生成定制工具所需的资源文件等，都需要 [Jekyll](http://jekyllrb.com/docs/installation/) 工具。这些只有在你对 Bootstrap 深度研究时才有用。
 PS 我在安装使用过程中出现这个错误
  ```
  Running "jshint:test" (jshint) task
  ERROR: Can't find config file: js/tests/unit/.jshintrc
  ```
</p>
]]></content>
  </entry>
  
</feed>
